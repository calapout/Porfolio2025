services:
  postgresql:
    restart: always
    env_file:
      - .env
    image: postgres:12.2-alpine
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
    volumes:
      - ./volumes/db:/var/lib/postgresql/data:z
  strapi:
    restart: always
    build:
      context: ./Strapi
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      CLIENT_URL: ${CLIENT_URL}
    ports:
      - "1337:1337"
    depends_on:
      - postgresql
    volumes:
      - ./volumes/strapi:/app/public/uploads:z
  api-gateway:
    restart: always
    env_file:
      - .env
    build:
      context: ./Backend
      dockerfile: Dockerfile
    environment:
      API_TOKEN: ${API_TOKEN}
      BASE_URL: ${BASE_URL}
    ports:
      - "8080:8080"
  frontend:
    restart: always
    env_file:
      - .env
    build:
      context: ./Portfolio
      dockerfile: Dockerfile
    ports:
      - "8081:80"